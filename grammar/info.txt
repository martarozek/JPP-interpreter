-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from ParGrammar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	%start_pListDecl -> ListDecl                       (1)
	%start_pExpr -> Expr                               (2)
	%start_pExpr1 -> Expr1                             (3)
	%start_pExpr2 -> Expr2                             (4)
	%start_pExpr3 -> Expr3                             (5)
	%start_pExpr4 -> Expr4                             (6)
	%start_pExpr5 -> Expr5                             (7)
	%start_pExpr6 -> Expr6                             (8)
	%start_pPatExpr -> PatExpr                         (9)
	%start_pListPatExpr -> ListPatExpr                 (10)
	%start_pListExpr -> ListExpr                       (11)
	%start_pAddOp -> AddOp                             (12)
	%start_pMulOp -> MulOp                             (13)
	%start_pRelOp -> RelOp                             (14)
	%start_pTypeSig -> TypeSig                         (15)
	%start_pType -> Type                               (16)
	%start_pType1 -> Type1                             (17)
	%start_pLit -> Lit                                 (18)
	%start_pPat1 -> Pat1                               (19)
	%start_pPat -> Pat                                 (20)
	%start_pListPat -> ListPat                         (21)
	%start_pDecl -> Decl                               (22)
	%start_pListIdent -> ListIdent                     (23)
	Ident -> L_ident                                   (24)
	Integer -> L_integ                                 (25)
	Prog -> ListDecl                                   (26)
	ListDecl -> Decl ';'                               (27)
	ListDecl -> Decl ';' ListDecl                      (28)
	Expr -> Expr1 '||' Expr                            (29)
	Expr -> Expr1 ':' Expr                             (30)
	Expr -> 'case' Expr 'of' ListPatExpr               (31)
	Expr -> 'let' ListDecl 'in' Expr                   (32)
	Expr -> '\\' ListIdent '->' Expr                   (33)
	Expr -> 'if' Expr 'then' Expr 'else' Expr          (34)
	Expr -> Expr1                                      (35)
	Expr1 -> Expr2 '&&' Expr1                          (36)
	Expr1 -> Expr2                                     (37)
	Expr2 -> Expr2 RelOp Expr3                         (38)
	Expr2 -> Expr3                                     (39)
	Expr3 -> Expr3 AddOp Expr4                         (40)
	Expr3 -> Expr4                                     (41)
	Expr4 -> Expr4 MulOp Expr5                         (42)
	Expr4 -> Expr5                                     (43)
	Expr5 -> '!' Expr6                                 (44)
	Expr5 -> '-' Expr6                                 (45)
	Expr5 -> Expr5 Expr6                               (46)
	Expr5 -> Expr6                                     (47)
	Expr6 -> Ident                                     (48)
	Expr6 -> Integer                                   (49)
	Expr6 -> 'True'                                    (50)
	Expr6 -> 'False'                                   (51)
	Expr6 -> '[]'                                      (52)
	Expr6 -> '[' ListExpr ']'                          (53)
	Expr6 -> '(' Expr ')'                              (54)
	PatExpr -> Pat '->' Expr                           (55)
	ListPatExpr -> PatExpr ';'                         (56)
	ListPatExpr -> PatExpr ';' ListPatExpr             (57)
	ListExpr -> Expr                                   (58)
	ListExpr -> Expr ',' ListExpr                      (59)
	AddOp -> '+'                                       (60)
	AddOp -> '-'                                       (61)
	MulOp -> '*'                                       (62)
	MulOp -> '/'                                       (63)
	MulOp -> '%'                                       (64)
	RelOp -> '<'                                       (65)
	RelOp -> '<='                                      (66)
	RelOp -> '>'                                       (67)
	RelOp -> '>='                                      (68)
	RelOp -> '=='                                      (69)
	RelOp -> '/='                                      (70)
	TypeSig -> Ident '::' Type                         (71)
	Type -> Type1 '->' Type                            (72)
	Type -> Type1                                      (73)
	Type1 -> 'Int'                                     (74)
	Type1 -> 'Bool'                                    (75)
	Type1 -> '[' Type1 ']'                             (76)
	Type1 -> '(' Type ')'                              (77)
	Lit -> Integer                                     (78)
	Lit -> 'True'                                      (79)
	Lit -> 'False'                                     (80)
	Pat1 -> Lit                                        (81)
	Pat1 -> Ident                                      (82)
	Pat1 -> '_'                                        (83)
	Pat1 -> '[]'                                       (84)
	Pat1 -> '[' ListPat ']'                            (85)
	Pat1 -> '(' Pat ')'                                (86)
	Pat -> Pat1 ':' Pat                                (87)
	Pat -> Pat1                                        (88)
	ListPat -> Pat                                     (89)
	ListPat -> Pat ',' ListPat                         (90)
	Decl -> TypeSig Ident ListIdent '=' Expr           (91)
	Decl -> Ident '=' Expr                             (92)
	ListIdent -> Ident                                 (93)
	ListIdent -> Ident ListIdent                       (94)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'%'            { PT _ (TS _ 2) }
	'&&'           { PT _ (TS _ 3) }
	'('            { PT _ (TS _ 4) }
	')'            { PT _ (TS _ 5) }
	'*'            { PT _ (TS _ 6) }
	'+'            { PT _ (TS _ 7) }
	','            { PT _ (TS _ 8) }
	'-'            { PT _ (TS _ 9) }
	'->'           { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	'/='           { PT _ (TS _ 12) }
	':'            { PT _ (TS _ 13) }
	'::'           { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'Bool'         { PT _ (TS _ 22) }
	'False'        { PT _ (TS _ 23) }
	'Int'          { PT _ (TS _ 24) }
	'True'         { PT _ (TS _ 25) }
	'['            { PT _ (TS _ 26) }
	'[]'           { PT _ (TS _ 27) }
	'\\'           { PT _ (TS _ 28) }
	']'            { PT _ (TS _ 29) }
	'_'            { PT _ (TS _ 30) }
	'case'         { PT _ (TS _ 31) }
	'else'         { PT _ (TS _ 32) }
	'if'           { PT _ (TS _ 33) }
	'in'           { PT _ (TS _ 34) }
	'let'          { PT _ (TS _ 35) }
	'of'           { PT _ (TS _ 36) }
	'then'         { PT _ (TS _ 37) }
	'||'           { PT _ (TS _ 38) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	%start_pListDecl rule  1
	%start_pExpr    rule  2
	%start_pExpr1   rule  3
	%start_pExpr2   rule  4
	%start_pExpr3   rule  5
	%start_pExpr4   rule  6
	%start_pExpr5   rule  7
	%start_pExpr6   rule  8
	%start_pPatExpr rule  9
	%start_pListPatExpr rule  10
	%start_pListExpr rule  11
	%start_pAddOp   rule  12
	%start_pMulOp   rule  13
	%start_pRelOp   rule  14
	%start_pTypeSig rule  15
	%start_pType    rule  16
	%start_pType1   rule  17
	%start_pLit     rule  18
	%start_pPat1    rule  19
	%start_pPat     rule  20
	%start_pListPat rule  21
	%start_pDecl    rule  22
	%start_pListIdent rule  23
	Ident           rule  24
	Integer         rule  25
	Prog            rule  26
	ListDecl        rules 27, 28
	Expr            rules 29, 30, 31, 32, 33, 34, 35
	Expr1           rules 36, 37
	Expr2           rules 38, 39
	Expr3           rules 40, 41
	Expr4           rules 42, 43
	Expr5           rules 44, 45, 46, 47
	Expr6           rules 48, 49, 50, 51, 52, 53, 54
	PatExpr         rule  55
	ListPatExpr     rules 56, 57
	ListExpr        rules 58, 59
	AddOp           rules 60, 61
	MulOp           rules 62, 63, 64
	RelOp           rules 65, 66, 67, 68, 69, 70
	TypeSig         rule  71
	Type            rules 72, 73
	Type1           rules 74, 75, 76, 77
	Lit             rules 78, 79, 80
	Pat1            rules 81, 82, 83, 84, 85, 86
	Pat             rules 87, 88
	ListPat         rules 89, 90
	Decl            rules 91, 92
	ListIdent       rules 93, 94

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	L_ident        shift, and enter state 25

	Ident          goto state 28
	Prog           goto state 104
	ListDecl       goto state 105
	TypeSig        goto state 29
	Decl           goto state 103

State 1


	L_ident        shift, and enter state 25

	Ident          goto state 28
	ListDecl       goto state 102
	TypeSig        goto state 29
	Decl           goto state 103

State 2


	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 101
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 3


	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr1          goto state 100
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 4


	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr2          goto state 99
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 5


	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr3          goto state 98
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 6


	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr4          goto state 97
	Expr5          goto state 77
	Expr6          goto state 78

State 7


	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr5          goto state 96
	Expr6          goto state 78

State 8


	'('            shift, and enter state 81
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr6          goto state 95

State 9


	'('            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'[]'           shift, and enter state 41
	'_'            shift, and enter state 42
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 31
	Integer        goto state 32
	PatExpr        goto state 94
	Lit            goto state 33
	Pat1           goto state 34
	Pat            goto state 93

State 10


	'('            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'[]'           shift, and enter state 41
	'_'            shift, and enter state 42
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 31
	Integer        goto state 32
	PatExpr        goto state 91
	ListPatExpr    goto state 92
	Lit            goto state 33
	Pat1           goto state 34
	Pat            goto state 93

State 11


	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 72
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78
	ListExpr       goto state 79

State 12


	'+'            shift, and enter state 68
	'-'            shift, and enter state 69

	AddOp          goto state 67

State 13


	'%'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66

	MulOp          goto state 63

State 14


	'/='           shift, and enter state 57
	'<'            shift, and enter state 58
	'<='           shift, and enter state 59
	'=='           shift, and enter state 60
	'>'            shift, and enter state 61
	'>='           shift, and enter state 62

	RelOp          goto state 56

State 15


	L_ident        shift, and enter state 25

	Ident          goto state 54
	TypeSig        goto state 55

State 16


	'('            shift, and enter state 48
	'Bool'         shift, and enter state 49
	'Int'          shift, and enter state 50
	'['            shift, and enter state 51

	Type           goto state 52
	Type1          goto state 53

State 17


	'('            shift, and enter state 48
	'Bool'         shift, and enter state 49
	'Int'          shift, and enter state 50
	'['            shift, and enter state 51

	Type1          goto state 47

State 18


	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	L_integ        shift, and enter state 43

	Integer        goto state 32
	Lit            goto state 46

State 19


	'('            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'[]'           shift, and enter state 41
	'_'            shift, and enter state 42
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 31
	Integer        goto state 32
	Lit            goto state 33
	Pat1           goto state 45

State 20


	'('            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'[]'           shift, and enter state 41
	'_'            shift, and enter state 42
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 31
	Integer        goto state 32
	Lit            goto state 33
	Pat1           goto state 34
	Pat            goto state 44

State 21


	'('            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'[]'           shift, and enter state 41
	'_'            shift, and enter state 42
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 31
	Integer        goto state 32
	Lit            goto state 33
	Pat1           goto state 34
	Pat            goto state 35
	ListPat        goto state 36

State 22


	L_ident        shift, and enter state 25

	Ident          goto state 28
	TypeSig        goto state 29
	Decl           goto state 30

State 23


	L_ident        shift, and enter state 25

	Ident          goto state 26
	ListIdent      goto state 27

State 24


	L_ident        shift, and enter state 25


State 25

	Ident -> L_ident .                                  (rule 24)

	'%'            reduce using rule 24
	'&&'           reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'+'            reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'->'           reduce using rule 24
	'/'            reduce using rule 24
	'/='           reduce using rule 24
	':'            reduce using rule 24
	'::'           reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'='            reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'False'        reduce using rule 24
	'True'         reduce using rule 24
	'['            reduce using rule 24
	'[]'           reduce using rule 24
	']'            reduce using rule 24
	'else'         reduce using rule 24
	'of'           reduce using rule 24
	'then'         reduce using rule 24
	'||'           reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	%eof           reduce using rule 24


State 26

	ListIdent -> Ident .                                (rule 93)
	ListIdent -> Ident . ListIdent                      (rule 94)

	'->'           reduce using rule 93
	'='            reduce using rule 93
	L_ident        shift, and enter state 25
	%eof           reduce using rule 93

	Ident          goto state 26
	ListIdent      goto state 135

State 27

	%start_pListIdent -> ListIdent .                    (rule 23)

	%eof           accept


State 28

	TypeSig -> Ident . '::' Type                        (rule 71)
	Decl -> Ident . '=' Expr                            (rule 92)

	'::'           shift, and enter state 125
	'='            shift, and enter state 134


State 29

	Decl -> TypeSig . Ident ListIdent '=' Expr          (rule 91)

	L_ident        shift, and enter state 25

	Ident          goto state 133

State 30

	%start_pDecl -> Decl .                              (rule 22)

	%eof           accept


State 31

	Pat1 -> Ident .                                     (rule 82)

	')'            reduce using rule 82
	','            reduce using rule 82
	'->'           reduce using rule 82
	':'            reduce using rule 82
	']'            reduce using rule 82
	%eof           reduce using rule 82


State 32

	Lit -> Integer .                                    (rule 78)

	')'            reduce using rule 78
	','            reduce using rule 78
	'->'           reduce using rule 78
	':'            reduce using rule 78
	']'            reduce using rule 78
	%eof           reduce using rule 78


State 33

	Pat1 -> Lit .                                       (rule 81)

	')'            reduce using rule 81
	','            reduce using rule 81
	'->'           reduce using rule 81
	':'            reduce using rule 81
	']'            reduce using rule 81
	%eof           reduce using rule 81


State 34

	Pat -> Pat1 . ':' Pat                               (rule 87)
	Pat -> Pat1 .                                       (rule 88)

	')'            reduce using rule 88
	','            reduce using rule 88
	'->'           reduce using rule 88
	':'            shift, and enter state 132
	']'            reduce using rule 88
	%eof           reduce using rule 88


State 35

	ListPat -> Pat .                                    (rule 89)
	ListPat -> Pat . ',' ListPat                        (rule 90)

	','            shift, and enter state 131
	']'            reduce using rule 89
	%eof           reduce using rule 89


State 36

	%start_pListPat -> ListPat .                        (rule 21)

	%eof           accept


State 37

	Pat1 -> '(' . Pat ')'                               (rule 86)

	'('            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'[]'           shift, and enter state 41
	'_'            shift, and enter state 42
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 31
	Integer        goto state 32
	Lit            goto state 33
	Pat1           goto state 34
	Pat            goto state 130

State 38

	Lit -> 'False' .                                    (rule 80)

	')'            reduce using rule 80
	','            reduce using rule 80
	'->'           reduce using rule 80
	':'            reduce using rule 80
	']'            reduce using rule 80
	%eof           reduce using rule 80


State 39

	Lit -> 'True' .                                     (rule 79)

	')'            reduce using rule 79
	','            reduce using rule 79
	'->'           reduce using rule 79
	':'            reduce using rule 79
	']'            reduce using rule 79
	%eof           reduce using rule 79


State 40

	Pat1 -> '[' . ListPat ']'                           (rule 85)

	'('            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'[]'           shift, and enter state 41
	'_'            shift, and enter state 42
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 31
	Integer        goto state 32
	Lit            goto state 33
	Pat1           goto state 34
	Pat            goto state 35
	ListPat        goto state 129

State 41

	Pat1 -> '[]' .                                      (rule 84)

	')'            reduce using rule 84
	','            reduce using rule 84
	'->'           reduce using rule 84
	':'            reduce using rule 84
	']'            reduce using rule 84
	%eof           reduce using rule 84


State 42

	Pat1 -> '_' .                                       (rule 83)

	')'            reduce using rule 83
	','            reduce using rule 83
	'->'           reduce using rule 83
	':'            reduce using rule 83
	']'            reduce using rule 83
	%eof           reduce using rule 83


State 43

	Integer -> L_integ .                                (rule 25)

	'%'            reduce using rule 25
	'&&'           reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'+'            reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'->'           reduce using rule 25
	'/'            reduce using rule 25
	'/='           reduce using rule 25
	':'            reduce using rule 25
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'False'        reduce using rule 25
	'True'         reduce using rule 25
	'['            reduce using rule 25
	'[]'           reduce using rule 25
	']'            reduce using rule 25
	'else'         reduce using rule 25
	'of'           reduce using rule 25
	'then'         reduce using rule 25
	'||'           reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	%eof           reduce using rule 25


State 44

	%start_pPat -> Pat .                                (rule 20)

	%eof           accept


State 45

	%start_pPat1 -> Pat1 .                              (rule 19)

	%eof           accept


State 46

	%start_pLit -> Lit .                                (rule 18)

	%eof           accept


State 47

	%start_pType1 -> Type1 .                            (rule 17)

	%eof           accept


State 48

	Type1 -> '(' . Type ')'                             (rule 77)

	'('            shift, and enter state 48
	'Bool'         shift, and enter state 49
	'Int'          shift, and enter state 50
	'['            shift, and enter state 51

	Type           goto state 128
	Type1          goto state 53

State 49

	Type1 -> 'Bool' .                                   (rule 75)

	')'            reduce using rule 75
	'->'           reduce using rule 75
	']'            reduce using rule 75
	L_ident        reduce using rule 75
	%eof           reduce using rule 75


State 50

	Type1 -> 'Int' .                                    (rule 74)

	')'            reduce using rule 74
	'->'           reduce using rule 74
	']'            reduce using rule 74
	L_ident        reduce using rule 74
	%eof           reduce using rule 74


State 51

	Type1 -> '[' . Type1 ']'                            (rule 76)

	'('            shift, and enter state 48
	'Bool'         shift, and enter state 49
	'Int'          shift, and enter state 50
	'['            shift, and enter state 51

	Type1          goto state 127

State 52

	%start_pType -> Type .                              (rule 16)

	%eof           accept


State 53

	Type -> Type1 . '->' Type                           (rule 72)
	Type -> Type1 .                                     (rule 73)

	')'            reduce using rule 73
	'->'           shift, and enter state 126
	L_ident        reduce using rule 73
	%eof           reduce using rule 73


State 54

	TypeSig -> Ident . '::' Type                        (rule 71)

	'::'           shift, and enter state 125


State 55

	%start_pTypeSig -> TypeSig .                        (rule 15)

	%eof           accept


State 56

	%start_pRelOp -> RelOp .                            (rule 14)

	%eof           accept


State 57

	RelOp -> '/=' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'False'        reduce using rule 70
	'True'         reduce using rule 70
	'['            reduce using rule 70
	'[]'           reduce using rule 70
	L_ident        reduce using rule 70
	L_integ        reduce using rule 70
	%eof           reduce using rule 70


State 58

	RelOp -> '<' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'False'        reduce using rule 65
	'True'         reduce using rule 65
	'['            reduce using rule 65
	'[]'           reduce using rule 65
	L_ident        reduce using rule 65
	L_integ        reduce using rule 65
	%eof           reduce using rule 65


State 59

	RelOp -> '<=' .                                     (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'False'        reduce using rule 66
	'True'         reduce using rule 66
	'['            reduce using rule 66
	'[]'           reduce using rule 66
	L_ident        reduce using rule 66
	L_integ        reduce using rule 66
	%eof           reduce using rule 66


State 60

	RelOp -> '==' .                                     (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'False'        reduce using rule 69
	'True'         reduce using rule 69
	'['            reduce using rule 69
	'[]'           reduce using rule 69
	L_ident        reduce using rule 69
	L_integ        reduce using rule 69
	%eof           reduce using rule 69


State 61

	RelOp -> '>' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'False'        reduce using rule 67
	'True'         reduce using rule 67
	'['            reduce using rule 67
	'[]'           reduce using rule 67
	L_ident        reduce using rule 67
	L_integ        reduce using rule 67
	%eof           reduce using rule 67


State 62

	RelOp -> '>=' .                                     (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'False'        reduce using rule 68
	'True'         reduce using rule 68
	'['            reduce using rule 68
	'[]'           reduce using rule 68
	L_ident        reduce using rule 68
	L_integ        reduce using rule 68
	%eof           reduce using rule 68


State 63

	%start_pMulOp -> MulOp .                            (rule 13)

	%eof           accept


State 64

	MulOp -> '%' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'False'        reduce using rule 64
	'True'         reduce using rule 64
	'['            reduce using rule 64
	'[]'           reduce using rule 64
	L_ident        reduce using rule 64
	L_integ        reduce using rule 64
	%eof           reduce using rule 64


State 65

	MulOp -> '*' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'False'        reduce using rule 62
	'True'         reduce using rule 62
	'['            reduce using rule 62
	'[]'           reduce using rule 62
	L_ident        reduce using rule 62
	L_integ        reduce using rule 62
	%eof           reduce using rule 62


State 66

	MulOp -> '/' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'False'        reduce using rule 63
	'True'         reduce using rule 63
	'['            reduce using rule 63
	'[]'           reduce using rule 63
	L_ident        reduce using rule 63
	L_integ        reduce using rule 63
	%eof           reduce using rule 63


State 67

	%start_pAddOp -> AddOp .                            (rule 12)

	%eof           accept


State 68

	AddOp -> '+' .                                      (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'False'        reduce using rule 60
	'True'         reduce using rule 60
	'['            reduce using rule 60
	'[]'           reduce using rule 60
	L_ident        reduce using rule 60
	L_integ        reduce using rule 60
	%eof           reduce using rule 60


State 69

	AddOp -> '-' .                                      (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'False'        reduce using rule 61
	'True'         reduce using rule 61
	'['            reduce using rule 61
	'[]'           reduce using rule 61
	L_ident        reduce using rule 61
	L_integ        reduce using rule 61
	%eof           reduce using rule 61


State 70

	Expr6 -> Ident .                                    (rule 48)

	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	'/='           reduce using rule 48
	':'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'False'        reduce using rule 48
	'True'         reduce using rule 48
	'['            reduce using rule 48
	'[]'           reduce using rule 48
	']'            reduce using rule 48
	'else'         reduce using rule 48
	'of'           reduce using rule 48
	'then'         reduce using rule 48
	'||'           reduce using rule 48
	L_ident        reduce using rule 48
	L_integ        reduce using rule 48
	%eof           reduce using rule 48


State 71

	Expr6 -> Integer .                                  (rule 49)

	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	'/='           reduce using rule 49
	':'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'False'        reduce using rule 49
	'True'         reduce using rule 49
	'['            reduce using rule 49
	'[]'           reduce using rule 49
	']'            reduce using rule 49
	'else'         reduce using rule 49
	'of'           reduce using rule 49
	'then'         reduce using rule 49
	'||'           reduce using rule 49
	L_ident        reduce using rule 49
	L_integ        reduce using rule 49
	%eof           reduce using rule 49


State 72

	ListExpr -> Expr .                                  (rule 58)
	ListExpr -> Expr . ',' ListExpr                     (rule 59)

	','            shift, and enter state 124
	']'            reduce using rule 58
	%eof           reduce using rule 58


State 73

	Expr -> Expr1 . '||' Expr                           (rule 29)
	Expr -> Expr1 . ':' Expr                            (rule 30)
	Expr -> Expr1 .                                     (rule 35)

	')'            reduce using rule 35
	','            reduce using rule 35
	':'            shift, and enter state 122
	';'            reduce using rule 35
	']'            reduce using rule 35
	'else'         reduce using rule 35
	'of'           reduce using rule 35
	'then'         reduce using rule 35
	'||'           shift, and enter state 123
	%eof           reduce using rule 35


State 74

	Expr1 -> Expr2 . '&&' Expr1                         (rule 36)
	Expr1 -> Expr2 .                                    (rule 37)
	Expr2 -> Expr2 . RelOp Expr3                        (rule 38)

	'&&'           shift, and enter state 121
	')'            reduce using rule 37
	','            reduce using rule 37
	'/='           shift, and enter state 57
	':'            reduce using rule 37
	';'            reduce using rule 37
	'<'            shift, and enter state 58
	'<='           shift, and enter state 59
	'=='           shift, and enter state 60
	'>'            shift, and enter state 61
	'>='           shift, and enter state 62
	']'            reduce using rule 37
	'else'         reduce using rule 37
	'of'           reduce using rule 37
	'then'         reduce using rule 37
	'||'           reduce using rule 37
	%eof           reduce using rule 37

	RelOp          goto state 107

State 75

	Expr2 -> Expr3 .                                    (rule 39)
	Expr3 -> Expr3 . AddOp Expr4                        (rule 40)

	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'+'            shift, and enter state 68
	','            reduce using rule 39
	'-'            shift, and enter state 69
	'/='           reduce using rule 39
	':'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	']'            reduce using rule 39
	'else'         reduce using rule 39
	'of'           reduce using rule 39
	'then'         reduce using rule 39
	'||'           reduce using rule 39
	%eof           reduce using rule 39

	AddOp          goto state 108

State 76

	Expr3 -> Expr4 .                                    (rule 41)
	Expr4 -> Expr4 . MulOp Expr5                        (rule 42)

	'%'            shift, and enter state 64
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            shift, and enter state 65
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            shift, and enter state 66
	'/='           reduce using rule 41
	':'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	']'            reduce using rule 41
	'else'         reduce using rule 41
	'of'           reduce using rule 41
	'then'         reduce using rule 41
	'||'           reduce using rule 41
	%eof           reduce using rule 41

	MulOp          goto state 109

State 77

	Expr4 -> Expr5 .                                    (rule 43)
	Expr5 -> Expr5 . Expr6                              (rule 46)

	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            shift, and enter state 81
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	'/='           reduce using rule 43
	':'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	']'            reduce using rule 43
	'else'         reduce using rule 43
	'of'           reduce using rule 43
	'then'         reduce using rule 43
	'||'           reduce using rule 43
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43
	%eof           reduce using rule 43

	Ident          goto state 70
	Integer        goto state 71
	Expr6          goto state 110

State 78

	Expr5 -> Expr6 .                                    (rule 47)

	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	'/='           reduce using rule 47
	':'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'False'        reduce using rule 47
	'True'         reduce using rule 47
	'['            reduce using rule 47
	'[]'           reduce using rule 47
	']'            reduce using rule 47
	'else'         reduce using rule 47
	'of'           reduce using rule 47
	'then'         reduce using rule 47
	'||'           reduce using rule 47
	L_ident        reduce using rule 47
	L_integ        reduce using rule 47
	%eof           reduce using rule 47


State 79

	%start_pListExpr -> ListExpr .                      (rule 11)

	%eof           accept


State 80

	Expr5 -> '!' . Expr6                                (rule 44)

	'('            shift, and enter state 81
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr6          goto state 120

State 81

	Expr6 -> '(' . Expr ')'                             (rule 54)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 119
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 82

	Expr5 -> '-' . Expr6                                (rule 45)

	'('            shift, and enter state 81
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr6          goto state 118

State 83

	Expr6 -> 'False' .                                  (rule 51)

	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	'/='           reduce using rule 51
	':'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'False'        reduce using rule 51
	'True'         reduce using rule 51
	'['            reduce using rule 51
	'[]'           reduce using rule 51
	']'            reduce using rule 51
	'else'         reduce using rule 51
	'of'           reduce using rule 51
	'then'         reduce using rule 51
	'||'           reduce using rule 51
	L_ident        reduce using rule 51
	L_integ        reduce using rule 51
	%eof           reduce using rule 51


State 84

	Expr6 -> 'True' .                                   (rule 50)

	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	'/='           reduce using rule 50
	':'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'False'        reduce using rule 50
	'True'         reduce using rule 50
	'['            reduce using rule 50
	'[]'           reduce using rule 50
	']'            reduce using rule 50
	'else'         reduce using rule 50
	'of'           reduce using rule 50
	'then'         reduce using rule 50
	'||'           reduce using rule 50
	L_ident        reduce using rule 50
	L_integ        reduce using rule 50
	%eof           reduce using rule 50


State 85

	Expr6 -> '[' . ListExpr ']'                         (rule 53)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 72
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78
	ListExpr       goto state 117

State 86

	Expr6 -> '[]' .                                     (rule 52)

	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	'/='           reduce using rule 52
	':'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'False'        reduce using rule 52
	'True'         reduce using rule 52
	'['            reduce using rule 52
	'[]'           reduce using rule 52
	']'            reduce using rule 52
	'else'         reduce using rule 52
	'of'           reduce using rule 52
	'then'         reduce using rule 52
	'||'           reduce using rule 52
	L_ident        reduce using rule 52
	L_integ        reduce using rule 52
	%eof           reduce using rule 52


State 87

	Expr -> '\\' . ListIdent '->' Expr                  (rule 33)

	L_ident        shift, and enter state 25

	Ident          goto state 26
	ListIdent      goto state 116

State 88

	Expr -> 'case' . Expr 'of' ListPatExpr              (rule 31)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 115
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 89

	Expr -> 'if' . Expr 'then' Expr 'else' Expr         (rule 34)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 114
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 90

	Expr -> 'let' . ListDecl 'in' Expr                  (rule 32)

	L_ident        shift, and enter state 25

	Ident          goto state 28
	ListDecl       goto state 113
	TypeSig        goto state 29
	Decl           goto state 103

State 91

	ListPatExpr -> PatExpr . ';'                        (rule 56)
	ListPatExpr -> PatExpr . ';' ListPatExpr            (rule 57)

	';'            shift, and enter state 112


State 92

	%start_pListPatExpr -> ListPatExpr .                (rule 10)

	%eof           accept


State 93

	PatExpr -> Pat . '->' Expr                          (rule 55)

	'->'           shift, and enter state 111


State 94

	%start_pPatExpr -> PatExpr .                        (rule 9)

	%eof           accept


State 95

	%start_pExpr6 -> Expr6 .                            (rule 8)

	%eof           accept


State 96

	%start_pExpr5 -> Expr5 .                            (rule 7)
	Expr5 -> Expr5 . Expr6                              (rule 46)

	'('            shift, and enter state 81
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43
	%eof           accept

	Ident          goto state 70
	Integer        goto state 71
	Expr6          goto state 110

State 97

	%start_pExpr4 -> Expr4 .                            (rule 6)
	Expr4 -> Expr4 . MulOp Expr5                        (rule 42)

	'%'            shift, and enter state 64
	'*'            shift, and enter state 65
	'/'            shift, and enter state 66
	%eof           accept

	MulOp          goto state 109

State 98

	%start_pExpr3 -> Expr3 .                            (rule 5)
	Expr3 -> Expr3 . AddOp Expr4                        (rule 40)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	%eof           accept

	AddOp          goto state 108

State 99

	%start_pExpr2 -> Expr2 .                            (rule 4)
	Expr2 -> Expr2 . RelOp Expr3                        (rule 38)

	'/='           shift, and enter state 57
	'<'            shift, and enter state 58
	'<='           shift, and enter state 59
	'=='           shift, and enter state 60
	'>'            shift, and enter state 61
	'>='           shift, and enter state 62
	%eof           accept

	RelOp          goto state 107

State 100

	%start_pExpr1 -> Expr1 .                            (rule 3)

	%eof           accept


State 101

	%start_pExpr -> Expr .                              (rule 2)

	%eof           accept


State 102

	%start_pListDecl -> ListDecl .                      (rule 1)

	%eof           accept


State 103

	ListDecl -> Decl . ';'                              (rule 27)
	ListDecl -> Decl . ';' ListDecl                     (rule 28)

	';'            shift, and enter state 106


State 104

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 105

	Prog -> ListDecl .                                  (rule 26)

	%eof           reduce using rule 26


State 106

	ListDecl -> Decl ';' .                              (rule 27)
	ListDecl -> Decl ';' . ListDecl                     (rule 28)

	'in'           reduce using rule 27
	L_ident        shift, and enter state 25
	%eof           reduce using rule 27

	Ident          goto state 28
	ListDecl       goto state 161
	TypeSig        goto state 29
	Decl           goto state 103

State 107

	Expr2 -> Expr2 RelOp . Expr3                        (rule 38)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr3          goto state 160
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 108

	Expr3 -> Expr3 AddOp . Expr4                        (rule 40)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr4          goto state 159
	Expr5          goto state 77
	Expr6          goto state 78

State 109

	Expr4 -> Expr4 MulOp . Expr5                        (rule 42)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr5          goto state 158
	Expr6          goto state 78

State 110

	Expr5 -> Expr5 Expr6 .                              (rule 46)

	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	'/='           reduce using rule 46
	':'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'False'        reduce using rule 46
	'True'         reduce using rule 46
	'['            reduce using rule 46
	'[]'           reduce using rule 46
	']'            reduce using rule 46
	'else'         reduce using rule 46
	'of'           reduce using rule 46
	'then'         reduce using rule 46
	'||'           reduce using rule 46
	L_ident        reduce using rule 46
	L_integ        reduce using rule 46
	%eof           reduce using rule 46


State 111

	PatExpr -> Pat '->' . Expr                          (rule 55)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 157
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 112

	ListPatExpr -> PatExpr ';' .                        (rule 56)
	ListPatExpr -> PatExpr ';' . ListPatExpr            (rule 57)

	'('            shift, and enter state 37
	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'[]'           shift, and enter state 41
	']'            reduce using rule 56
	'_'            shift, and enter state 42
	'else'         reduce using rule 56
	'of'           reduce using rule 56
	'then'         reduce using rule 56
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43
	%eof           reduce using rule 56

	Ident          goto state 31
	Integer        goto state 32
	PatExpr        goto state 91
	ListPatExpr    goto state 156
	Lit            goto state 33
	Pat1           goto state 34
	Pat            goto state 93

State 113

	Expr -> 'let' ListDecl . 'in' Expr                  (rule 32)

	'in'           shift, and enter state 155


State 114

	Expr -> 'if' Expr . 'then' Expr 'else' Expr         (rule 34)

	'then'         shift, and enter state 154


State 115

	Expr -> 'case' Expr . 'of' ListPatExpr              (rule 31)

	'of'           shift, and enter state 153


State 116

	Expr -> '\\' ListIdent . '->' Expr                  (rule 33)

	'->'           shift, and enter state 152


State 117

	Expr6 -> '[' ListExpr . ']'                         (rule 53)

	']'            shift, and enter state 151


State 118

	Expr5 -> '-' Expr6 .                                (rule 45)

	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	'/='           reduce using rule 45
	':'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'False'        reduce using rule 45
	'True'         reduce using rule 45
	'['            reduce using rule 45
	'[]'           reduce using rule 45
	']'            reduce using rule 45
	'else'         reduce using rule 45
	'of'           reduce using rule 45
	'then'         reduce using rule 45
	'||'           reduce using rule 45
	L_ident        reduce using rule 45
	L_integ        reduce using rule 45
	%eof           reduce using rule 45


State 119

	Expr6 -> '(' Expr . ')'                             (rule 54)

	')'            shift, and enter state 150


State 120

	Expr5 -> '!' Expr6 .                                (rule 44)

	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	'/='           reduce using rule 44
	':'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'False'        reduce using rule 44
	'True'         reduce using rule 44
	'['            reduce using rule 44
	'[]'           reduce using rule 44
	']'            reduce using rule 44
	'else'         reduce using rule 44
	'of'           reduce using rule 44
	'then'         reduce using rule 44
	'||'           reduce using rule 44
	L_ident        reduce using rule 44
	L_integ        reduce using rule 44
	%eof           reduce using rule 44


State 121

	Expr1 -> Expr2 '&&' . Expr1                         (rule 36)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr1          goto state 149
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 122

	Expr -> Expr1 ':' . Expr                            (rule 30)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 148
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 123

	Expr -> Expr1 '||' . Expr                           (rule 29)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 147
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 124

	ListExpr -> Expr ',' . ListExpr                     (rule 59)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 72
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78
	ListExpr       goto state 146

State 125

	TypeSig -> Ident '::' . Type                        (rule 71)

	'('            shift, and enter state 48
	'Bool'         shift, and enter state 49
	'Int'          shift, and enter state 50
	'['            shift, and enter state 51

	Type           goto state 145
	Type1          goto state 53

State 126

	Type -> Type1 '->' . Type                           (rule 72)

	'('            shift, and enter state 48
	'Bool'         shift, and enter state 49
	'Int'          shift, and enter state 50
	'['            shift, and enter state 51

	Type           goto state 144
	Type1          goto state 53

State 127

	Type1 -> '[' Type1 . ']'                            (rule 76)

	']'            shift, and enter state 143


State 128

	Type1 -> '(' Type . ')'                             (rule 77)

	')'            shift, and enter state 142


State 129

	Pat1 -> '[' ListPat . ']'                           (rule 85)

	']'            shift, and enter state 141


State 130

	Pat1 -> '(' Pat . ')'                               (rule 86)

	')'            shift, and enter state 140


State 131

	ListPat -> Pat ',' . ListPat                        (rule 90)

	'('            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'[]'           shift, and enter state 41
	'_'            shift, and enter state 42
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 31
	Integer        goto state 32
	Lit            goto state 33
	Pat1           goto state 34
	Pat            goto state 35
	ListPat        goto state 139

State 132

	Pat -> Pat1 ':' . Pat                               (rule 87)

	'('            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'[]'           shift, and enter state 41
	'_'            shift, and enter state 42
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 31
	Integer        goto state 32
	Lit            goto state 33
	Pat1           goto state 34
	Pat            goto state 138

State 133

	Decl -> TypeSig Ident . ListIdent '=' Expr          (rule 91)

	L_ident        shift, and enter state 25

	Ident          goto state 26
	ListIdent      goto state 137

State 134

	Decl -> Ident '=' . Expr                            (rule 92)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 136
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 135

	ListIdent -> Ident ListIdent .                      (rule 94)

	'->'           reduce using rule 94
	'='            reduce using rule 94
	%eof           reduce using rule 94


State 136

	Decl -> Ident '=' Expr .                            (rule 92)

	';'            reduce using rule 92
	%eof           reduce using rule 92


State 137

	Decl -> TypeSig Ident ListIdent . '=' Expr          (rule 91)

	'='            shift, and enter state 166


State 138

	Pat -> Pat1 ':' Pat .                               (rule 87)

	')'            reduce using rule 87
	','            reduce using rule 87
	'->'           reduce using rule 87
	']'            reduce using rule 87
	%eof           reduce using rule 87


State 139

	ListPat -> Pat ',' ListPat .                        (rule 90)

	']'            reduce using rule 90
	%eof           reduce using rule 90


State 140

	Pat1 -> '(' Pat ')' .                               (rule 86)

	')'            reduce using rule 86
	','            reduce using rule 86
	'->'           reduce using rule 86
	':'            reduce using rule 86
	']'            reduce using rule 86
	%eof           reduce using rule 86


State 141

	Pat1 -> '[' ListPat ']' .                           (rule 85)

	')'            reduce using rule 85
	','            reduce using rule 85
	'->'           reduce using rule 85
	':'            reduce using rule 85
	']'            reduce using rule 85
	%eof           reduce using rule 85


State 142

	Type1 -> '(' Type ')' .                             (rule 77)

	')'            reduce using rule 77
	'->'           reduce using rule 77
	']'            reduce using rule 77
	L_ident        reduce using rule 77
	%eof           reduce using rule 77


State 143

	Type1 -> '[' Type1 ']' .                            (rule 76)

	')'            reduce using rule 76
	'->'           reduce using rule 76
	']'            reduce using rule 76
	L_ident        reduce using rule 76
	%eof           reduce using rule 76


State 144

	Type -> Type1 '->' Type .                           (rule 72)

	')'            reduce using rule 72
	L_ident        reduce using rule 72
	%eof           reduce using rule 72


State 145

	TypeSig -> Ident '::' Type .                        (rule 71)

	L_ident        reduce using rule 71
	%eof           reduce using rule 71


State 146

	ListExpr -> Expr ',' ListExpr .                     (rule 59)

	']'            reduce using rule 59
	%eof           reduce using rule 59


State 147

	Expr -> Expr1 '||' Expr .                           (rule 29)

	')'            reduce using rule 29
	','            reduce using rule 29
	';'            reduce using rule 29
	']'            reduce using rule 29
	'else'         reduce using rule 29
	'of'           reduce using rule 29
	'then'         reduce using rule 29
	%eof           reduce using rule 29


State 148

	Expr -> Expr1 ':' Expr .                            (rule 30)

	')'            reduce using rule 30
	','            reduce using rule 30
	';'            reduce using rule 30
	']'            reduce using rule 30
	'else'         reduce using rule 30
	'of'           reduce using rule 30
	'then'         reduce using rule 30
	%eof           reduce using rule 30


State 149

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 36)

	')'            reduce using rule 36
	','            reduce using rule 36
	':'            reduce using rule 36
	';'            reduce using rule 36
	']'            reduce using rule 36
	'else'         reduce using rule 36
	'of'           reduce using rule 36
	'then'         reduce using rule 36
	'||'           reduce using rule 36
	%eof           reduce using rule 36


State 150

	Expr6 -> '(' Expr ')' .                             (rule 54)

	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	'/='           reduce using rule 54
	':'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'False'        reduce using rule 54
	'True'         reduce using rule 54
	'['            reduce using rule 54
	'[]'           reduce using rule 54
	']'            reduce using rule 54
	'else'         reduce using rule 54
	'of'           reduce using rule 54
	'then'         reduce using rule 54
	'||'           reduce using rule 54
	L_ident        reduce using rule 54
	L_integ        reduce using rule 54
	%eof           reduce using rule 54


State 151

	Expr6 -> '[' ListExpr ']' .                         (rule 53)

	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	'/='           reduce using rule 53
	':'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'False'        reduce using rule 53
	'True'         reduce using rule 53
	'['            reduce using rule 53
	'[]'           reduce using rule 53
	']'            reduce using rule 53
	'else'         reduce using rule 53
	'of'           reduce using rule 53
	'then'         reduce using rule 53
	'||'           reduce using rule 53
	L_ident        reduce using rule 53
	L_integ        reduce using rule 53
	%eof           reduce using rule 53


State 152

	Expr -> '\\' ListIdent '->' . Expr                  (rule 33)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 165
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 153

	Expr -> 'case' Expr 'of' . ListPatExpr              (rule 31)

	'('            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'['            shift, and enter state 40
	'[]'           shift, and enter state 41
	'_'            shift, and enter state 42
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 31
	Integer        goto state 32
	PatExpr        goto state 91
	ListPatExpr    goto state 164
	Lit            goto state 33
	Pat1           goto state 34
	Pat            goto state 93

State 154

	Expr -> 'if' Expr 'then' . Expr 'else' Expr         (rule 34)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 163
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 155

	Expr -> 'let' ListDecl 'in' . Expr                  (rule 32)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 162
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 156

	ListPatExpr -> PatExpr ';' ListPatExpr .            (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	']'            reduce using rule 57
	'else'         reduce using rule 57
	'of'           reduce using rule 57
	'then'         reduce using rule 57
	%eof           reduce using rule 57


State 157

	PatExpr -> Pat '->' Expr .                          (rule 55)

	';'            reduce using rule 55
	%eof           reduce using rule 55


State 158

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 42)
	Expr5 -> Expr5 . Expr6                              (rule 46)

	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'('            shift, and enter state 81
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	'/='           reduce using rule 42
	':'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	']'            reduce using rule 42
	'else'         reduce using rule 42
	'of'           reduce using rule 42
	'then'         reduce using rule 42
	'||'           reduce using rule 42
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43
	%eof           reduce using rule 42

	Ident          goto state 70
	Integer        goto state 71
	Expr6          goto state 110

State 159

	Expr3 -> Expr3 AddOp Expr4 .                        (rule 40)
	Expr4 -> Expr4 . MulOp Expr5                        (rule 42)

	'%'            shift, and enter state 64
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            shift, and enter state 65
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            shift, and enter state 66
	'/='           reduce using rule 40
	':'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	']'            reduce using rule 40
	'else'         reduce using rule 40
	'of'           reduce using rule 40
	'then'         reduce using rule 40
	'||'           reduce using rule 40
	%eof           reduce using rule 40

	MulOp          goto state 109

State 160

	Expr2 -> Expr2 RelOp Expr3 .                        (rule 38)
	Expr3 -> Expr3 . AddOp Expr4                        (rule 40)

	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'+'            shift, and enter state 68
	','            reduce using rule 38
	'-'            shift, and enter state 69
	'/='           reduce using rule 38
	':'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	']'            reduce using rule 38
	'else'         reduce using rule 38
	'of'           reduce using rule 38
	'then'         reduce using rule 38
	'||'           reduce using rule 38
	%eof           reduce using rule 38

	AddOp          goto state 108

State 161

	ListDecl -> Decl ';' ListDecl .                     (rule 28)

	'in'           reduce using rule 28
	%eof           reduce using rule 28


State 162

	Expr -> 'let' ListDecl 'in' Expr .                  (rule 32)

	')'            reduce using rule 32
	','            reduce using rule 32
	';'            reduce using rule 32
	']'            reduce using rule 32
	'else'         reduce using rule 32
	'of'           reduce using rule 32
	'then'         reduce using rule 32
	%eof           reduce using rule 32


State 163

	Expr -> 'if' Expr 'then' Expr . 'else' Expr         (rule 34)

	'else'         shift, and enter state 168


State 164

	Expr -> 'case' Expr 'of' ListPatExpr .              (rule 31)

	')'            reduce using rule 31
	','            reduce using rule 31
	';'            reduce using rule 31
	']'            reduce using rule 31
	'else'         reduce using rule 31
	'of'           reduce using rule 31
	'then'         reduce using rule 31
	%eof           reduce using rule 31


State 165

	Expr -> '\\' ListIdent '->' Expr .                  (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	';'            reduce using rule 33
	']'            reduce using rule 33
	'else'         reduce using rule 33
	'of'           reduce using rule 33
	'then'         reduce using rule 33
	%eof           reduce using rule 33


State 166

	Decl -> TypeSig Ident ListIdent '=' . Expr          (rule 91)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 167
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 167

	Decl -> TypeSig Ident ListIdent '=' Expr .          (rule 91)

	';'            reduce using rule 91
	%eof           reduce using rule 91


State 168

	Expr -> 'if' Expr 'then' Expr 'else' . Expr         (rule 34)

	'!'            shift, and enter state 80
	'('            shift, and enter state 81
	'-'            shift, and enter state 82
	'False'        shift, and enter state 83
	'True'         shift, and enter state 84
	'['            shift, and enter state 85
	'[]'           shift, and enter state 86
	'\\'           shift, and enter state 87
	'case'         shift, and enter state 88
	'if'           shift, and enter state 89
	'let'          shift, and enter state 90
	L_ident        shift, and enter state 25
	L_integ        shift, and enter state 43

	Ident          goto state 70
	Integer        goto state 71
	Expr           goto state 169
	Expr1          goto state 73
	Expr2          goto state 74
	Expr3          goto state 75
	Expr4          goto state 76
	Expr5          goto state 77
	Expr6          goto state 78

State 169

	Expr -> 'if' Expr 'then' Expr 'else' Expr .         (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34
	';'            reduce using rule 34
	']'            reduce using rule 34
	'else'         reduce using rule 34
	'of'           reduce using rule 34
	'then'         reduce using rule 34
	%eof           reduce using rule 34


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 95
Number of terminals: 40
Number of non-terminals: 50
Number of states: 170
